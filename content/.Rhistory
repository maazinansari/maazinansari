cv_5 = trainControl(method = "cv", number = 5)
fit_lm         = train(Outstate ~ ., data = college_trn, method = "lm",
trControl = cv_5)
fit_lm
fit_lm$results
summary(lm((Outstate ~ ., data = college_trn))
summary(lm(Outstate ~ ., data = college_trn))
sum(residuals(lm(Outstate ~ ., data = college_trn))^2)
sqrt(sum(residuals(lm(Outstate ~ ., data = college_trn))^2))
residuals(lm(Outstate ~ ., data = college_trn))
residuals(lm(Outstate ~ ., data = college_trn))^2
mean(residuals(lm(Outstate ~ ., data = college_trn))^2)
sqrt(mean(residuals(lm(Outstate ~ ., data = college_trn))^2))
fit_lm$results
df2 = df %>%
filter(type == 'HKQuantityTypeIdentifierDistanceWalkingRunning',
year == 2016,
month == 11) %>%
group_by(date,dayofweek,hour) %>%
summarize(miles=sum(value)) %>%
group_by(hour,dayofweek) %>%
summarize(miles=sum(miles)) %>%
arrange(desc(miles))
library(dplyr)
library(ggplot2)
library(lubridate)
library(XML)
#load apple health export.xml file
xml <- xmlParse("apple_health_export/export.xml")
setwd("~/Dropbox/Sandbox/R")
#load apple health export.xml file
xml <- xmlParse("apple_health_export/export.xml")
#transform xml file to data frame - select the Record rows from the xml file
df <- XML:::xmlAttrsToDataFrame(xml["//Record"])
#make value variable numeric
df$value <- as.numeric(as.character(df$value))
str(df)
#make endDate in a date time variable POSIXct using lubridate with eastern time zone
df$endDate <-ymd_hms(df$endDate,tz="America/Chicago")
##add in year month date dayofweek hour columns
df$month<-format(df$endDate,"%m")
df$year<-format(df$endDate,"%Y")
df$date<-format(df$endDate,"%Y-%m-%d")
df$dayofweek <-wday(df$endDate, label=TRUE, abbr=FALSE)
df$hour <-format(df$endDate,"%H")
levels(df$type)
df2 = df %>%
filter(type == 'HKQuantityTypeIdentifierDistanceWalkingRunning',
year == 2016,
month == 11) %>%
group_by(date,dayofweek,hour) %>%
summarize(miles=sum(value)) %>%
group_by(hour,dayofweek) %>%
summarize(miles=sum(miles)) %>%
arrange(desc(miles))
df2
filter(df2, dayofweek = Wednesday)
filter(df2, dayofweek == Wednesday)
filter(df2, dayofweek == "Wednesday")
filter(df2, dayofweek == "Wednesday") -> df3
df3$hour = as.numeric(df3$hour)
plot(miles ~ hour, data = df3)
plot(miles ~ as.numeric(hour), data = df2)
plot(miles ~ as.numeric(hour), data = df2, col = df2$dayofweek)
library("maazinr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("maazinr", lib.loc = "~/maazinansari/maazinr/")
library("maazinr", lib.loc = "~/maazinansari/")
install("~/maazinansari/maazinr")
library(devtools)
install("~/maazinansari/maazinr")
setwd("~/maazinansari/content/")
rm(list = ls())
source("R/despacito/despacito.R")
setwd("R/despacito/")
## y = general + monthly + weekly + error
source('~/maazinansari/content/R/despacito/despacito.R')
hist(despacito_df$views)
hist(despacito_df$views, nclass = 25)
hist(despacito_df$views, nclass = 50)
hist(despacito_df[saturdays, views], nclass = 50)
hist(despacito_df[saturdays, "views"], nclass = 50)
hist(despacito_df[saturdays, "views"])
hist(despacito_df[saturdays, "views"], nclass = 25)
library(knitr)
source("despacito.R")
read_chunk("despacito.R")
opts_chunk$set(fig.align = "center")
opts_knit$set(root.dir = "~/maazinansari/content/", base.url = "../../")
view_mod = lm(views ~ factor(month) * factor(wday), data = despacito_df)
summary(view_mod)
despacito_df$month
despacito_df$wday
view_mod = lm(views ~ factor(month) + factor(wday), data = despacito_df)
summary(view_mod)
view_mod = lm(views ~ factor(month, ordered = FALSE) + factor(wday), data = despacito_df)
summary(view_mod)
library(faraway)
view_mod = lm(views ~ factor(month, ordered = FALSE) + factor(wday) + 0, data = despacito_df)
summary(view_mod)
library(faraway)
view_mod = lm(views ~ factor(month, ordered = FALSE) + factor(wday) + 0 + 0, data = despacito_df)
summary(view_mod)
library(faraway)
view_mod = lm(views ~ factor(month, ordered = FALSE) + factor(wday) + mean(views), data = despacito_df)
library(faraway)
view_mod = lm(views ~ factor(month, ordered = FALSE) + factor(wday) + mean(despacito_df$views), data = despacito_df)
library(faraway)
view_mod = lm(views ~ factor(month, ordered = FALSE) + factor(wday) + 1, data = despacito_df)
summary(view_mod)
mean(despacito_df$views)
library(faraway)
view_mod = lm(views ~ factor(month, ordered = FALSE) + factor(wday) - 1, data = despacito_df)
summary(view_mod)
library(faraway)
view_mod = lm(views ~ month + wday, data = despacito_df)
summary(view_mod)
library(faraway)
view_mod = lm(views ~ character(month) + wday, data = despacito_df)
library(faraway)
view_mod = lm(views ~ month + wday, data = despacito_df)
summary(view_mod)
library(faraway)
view_mod = lm(views ~ month + wday - 1, data = despacito_df)
summary(view_mod)
mean(despacito_df$views)
library(faraway)
view_mod = lm(views ~ month + wday, data = despacito_df)
summary(view_mod)
despacito_df[which(despacito_df$wday == "Monday"), "views"]
mean(despacito_df[which(despacito_df$wday == "Monday"), "views"])
mean(despacito_df[which(despacito_df$wday == "Monday") & which(despacito_df$month == "Jan"), "views"])
mean(despacito_df[which(despacito_df$wday == "Monday") && which(despacito_df$month == "Jan"), "views"])
which(despacito_df$wday == "Monday")
which(despacito_df$month == "Jan")
which(despacito_df$wday == "Monday") && which(despacito_df$month == "Jan")
?subset
subset(despacito_df, month == "Jan")
subset(despacito_df, month == "Jan", wday == "Monday")
subset(despacito_df, month == "Jan", wday == "Monday", select = views)
subset(despacito_df, month == "Jan" & wday == "Monday", select = views)
mean(subset(despacito_df, month == "Jan" & wday == "Monday", select = views))
subset(despacito_df, month == "Jan" & wday == "Monday", select = views)
subset(despacito_df, month == "Jan" & wday == "Monday", select = views)$views
mean(subset(despacito_df, month == "Jan" & wday == "Monday", select = views)$views)
model.matrix(view_mod)
library(faraway)
view_mod = lm(views ~ month + wday, data = despacito_df, model = TRUE)
summary(view_mod)
library(faraway)
view_mod = lm(views ~ month + wday, data = despacito_df, model = FALSE)
summary(view_mod)
model.matrix(view_mod)
c(levels(despacito_df$month), levels(despacito_df$wday))
matrx(0, 12+7)
matrix(0, 12+7)
matrix(0, nrow(despacito_df), 12 + 7)
mod.matrix = matrix(0, nrow(despacito_df), 12 + 7)
c(levels(despacito_df$month), levels(despacito_df$wday))
colnames(mod.matrix) = c(levels(despacito_df$month), levels(despacito_df$wday))
head(mod.matrix)
despacito_df[["month"]] == colnames(mod.matrix)
model.frame(views ~ month, data = despacito_df)
boxplot(despacito_df$views)
despacito_df[["month"]] == "Jan"
sapply(levels(despacito_df[["month"]]), function(x) despacito_df[["month"]] == x)
library(faraway)
matrix_month = sapply(levels(despacito_df[["month"]]), function(x) despacito_df[["month"]] == x)
matrix_wday = sapply(levels(despacito_df[["wday"]]), function(x) despacito_df[["wday"]] == x)
cbind(despacito_df[["views"]], matrix_month, matrix_wday)
cbind(y = despacito_df[["views"]], matrix_month, matrix_wday)
mod_matrix = cbind(y = despacito_df[["views"]], matrix_month, matrix_wday)
view_mod = lm(mod_matrix)
view_mod = lm(y ~ ., data = mod_matrix)
view_mod = lm(y ~ ., data = mod_matrix, method = "model.frame")
view_mod = lm(y ~ ., data = as.data.frame(mod_matrix), method = "model.frame", model = TRUE)
summary(view_mod)
view_mod = lm(y ~ ., data = as.data.frame(mod_matrix))
summary(view_mod)
mean(subset(despacito_df, month == "Jan" & wday == "Monday", select = views)$views)
mean(subset(despacito_df, month == "Dec" & wday == "Sunday", select = views)$views)
mean(subset(despacito_df, month != "Dec" & wday != "Sunday", select = views)$views)
model.matrix(mod_matrix)
model.matrix(~ mod_matrix)
mod_matrix = cbind(y = despacito_df[["views"]],
mean = mean(despacito_df[["views"]]),
matrix_month,
matrix_wday)
view_mod = lm(y ~ ., data = as.data.frame(mod_matrix))
summary(view_mod)
library(faraway)
matrix_month = sapply(levels(despacito_df[["month"]]), function(x) despacito_df[["month"]] == x)
matrix_wday = sapply(levels(despacito_df[["wday"]]), function(x) despacito_df[["wday"]] == x)
mod_matrix = cbind(y = despacito_df[["views"]],
mean = mean(despacito_df[["views"]]),
matrix_month,
matrix_wday)
view_mod = lm(y ~ . - 1, data = as.data.frame(mod_matrix))
summary(view_mod)
mean = mean(despacito_df[["views"]])
mean(despacito_df$views)
library(faraway)
matrix_month = sapply(levels(despacito_df[["month"]]), function(x) despacito_df[["month"]] == x)
matrix_wday = sapply(levels(despacito_df[["wday"]]), function(x) despacito_df[["wday"]] == x)
mod_matrix = cbind(y = despacito_df[["views"]],
matrix_month,
matrix_wday)
view_mod = lm(y ~ . - 1, data = as.data.frame(mod_matrix))
summary(view_mod)
library(faraway)
matrix_month = sapply(levels(despacito_df[["month"]]), function(x) despacito_df[["month"]] == x)
matrix_wday = sapply(levels(despacito_df[["wday"]]), function(x) despacito_df[["wday"]] == x)
mod_matrix = cbind(y = despacito_df[["views"]],
matrix_month,
matrix_wday)
view_mod = lm(y ~ . + 0, data = as.data.frame(mod_matrix))
summary(view_mod)
mean(despacito_df[which(despacito_df$wday == "Monday") && which(despacito_df$month == "Jan"), "views"])
mean(despacito_df[which(despacito_df$month == "Jan"), "views"])
library(faraway)
matrix_month = sapply(levels(despacito_df[["month"]]), function(x) despacito_df[["month"]] == x)
matrix_wday = sapply(levels(despacito_df[["wday"]]), function(x) despacito_df[["wday"]] == x)
mod_matrix = cbind(y = despacito_df[["views"]],
matrix_month,
matrix_wday)
view_mod = lm(y ~ ., data = as.data.frame(mod_matrix))
summary(view_mod)
summary(views ~ month + wday, data = despacito_df)
summary(lm(views ~ month + wday, data = despacito_df))
summary(lm(views ~ factor(month, ordered = FALSE) + wday, data = despacito_df))
library(faraway)
matrix_month = sapply(levels(despacito_df[["month"]]), function(x) despacito_df[["month"]] == x)
matrix_wday = sapply(levels(despacito_df[["wday"]]), function(x) despacito_df[["wday"]] == x)
mod_matrix = cbind(y = despacito_df[["views"]],
matrix_month,
matrix_wday)
view_mod = lm(y ~ ., data = as.data.frame(mod_matrix))
summary(view_mod)
summary(lm(views ~ factor(month, ordered = FALSE) + wday, data = despacito_df))
summary(lm(views ~ month + wday, data = despacito_df))
view_mod = summary(lm(views ~ month + wday, data = despacito_df))
view_mod = glm(views ~ month + wday, data = despacito_df)
summary(view_mod)
view_mod = lm(views ~ month + wday, data = despacito_df)
summary(view_mod)
new_day = ymd("2018-01-01")
new_day
new_data = data.frame(month = month(new_day), wday = wday(new_day))
new_data
new_data = data.frame(month = month(new_day, TRUE), wday = wday(new_day, label = TRUE))
new_data
new_data = data.frame(month = month(new_day, TRUE), wday = wday(new_day, TRUE, FALSE))
new_data
predict(view_mod, new_data)
predict(view_mod)
plot_vpd(predict(view_mod))
plot(predict(view_mod))
plot(predict(view_mod), type = "l")
plot_vpd()
plot(predict(view_mod), type = "l", col = "red", add = TRUE)
plot_vpd()
plot(predict(view_mod), type = "l", col = "red", add = TRUE)
plot(xlim, predict(view_mod), type = "l", col = "red", add = TRUE)
xlim
plot(seq.Date(xlim, "day"), predict(view_mod), type = "l", col = "red", add = TRUE)
plot_vpd()
plot(seq.Date(from = xlim[1], to = xlim[2], by = "day"), predict(view_mod), type = "l", col = "red", add = TRUE)
seq.Date(from = xlim[1], to = xlim[2], by = "day")
predict(view_mod)
length(seq.Date(from = xlim[1], to = xlim[2], by = "day")); length(predict(view_mod))
length(seq.Date(from = despacito_df["date", 1], to = despacito_df["date", ], by = "day")); length(predict(view_mod))
length(seq.Date(from = despacito_df["date", 1], to = despacito_df["date", 362], by = "day")); length(predict(view_mod))
length(seq.Date(from = despacito_df[1, "date"], to = despacito_df[362, "date"], by = "day")); length(predict(view_mod))
plot(seq.Date(from = xlim[1], to = xlim[2], by = "day"), predict(view_mod), type = "l", col = "red", add = TRUE)
plot(seq.Date(from = despacito_df[1, "date"], to = despacito_df[362, "date"], by = "day"), predict(view_mod), type = "l", col = "red", add = TRUE)
plot_vpd()
plot(seq.Date(from = despacito_df[1, "date"], to = despacito_df[362, "date"], by = "day"), predict(view_mod), type = "l", col = "red", add = TRUE)
plot(x = despacito_df[["date"]], y = predict(view_mod),
type = "l",
lwd = 3,
main = "Views per day",
ylim = c(0, 30e6),
xlim = xlim,
axes = FALSE)
axis(side = 1, at = xseq, labels = month(xseq, label = TRUE))
view_mod = lm(views ~ month + wday, data = despacito_df)
summary(view_mod)
new_day = ymd("2018-01-01")
new_data = data.frame(month = month(new_day, TRUE), wday = wday(new_day, TRUE, FALSE))
new_data
plot_vpd()
plot(x = despacito_df[["date"]], y = predict(view_mod),
type = "l",
lwd = 3,
main = "Views per day",
ylim = c(0, 30e6),
xlim = xlim,
axes = FALSE)
axis(side = 1, at = xseq, labels = month(xseq, label = TRUE))
axis(side = 2, at = seq(0, 30e6, 5e6), labels = paste(seq(0, 30, 5), "M", sep = ""), las = 1)
view_mod = lm(views ~ month * wday, data = despacito_df)
#summary(view_mod)
new_day = ymd("2018-01-01")
new_data = data.frame(month = month(new_day, TRUE), wday = wday(new_day, TRUE, FALSE))
new_data
plot_vpd()
plot(x = despacito_df[["date"]], y = predict(view_mod),
type = "l",
lwd = 3,
main = "Views per day",
ylim = c(0, 30e6),
xlim = xlim,
axes = FALSE)
axis(side = 1, at = xseq, labels = month(xseq, label = TRUE))
axis(side = 2, at = seq(0, 30e6, 5e6), labels = paste(seq(0, 30, 5), "M", sep = ""), las = 1)
predict(view_mod, new_data)
plot_vpd()
plot(x = despacito_df[["date"]], y = predict(view_mod),
type = "l",
lwd = 1,
main = "Views per day",
ylim = c(0, 30e6),
xlim = xlim,
axes = FALSE, add = TRUE)
plot_vpd()
lines(x = despacito_df[["date"]], y = predict(view_mod), add = TRUE)
lines(x = despacito_df[["date"]], y = predict(view_mod))
plot.new()
plot_vpd()
lines(x = despacito_df[["date"]], y = predict(view_mod))
plot.new()
lines(x = despacito_df[["date"]], y = predict(view_mod))
view_mod = lm(views ~ month + wday, data = despacito_df)
summary(view_mod)
new_day = ymd("2018-01-01")
new_data = data.frame(month = month(new_day, TRUE), wday = wday(new_day, TRUE, FALSE))
lines(x = despacito_df[["date"]], y = predict(view_mod))
view_mod = lm(views ~ month + wday, data = despacito_df)
summary(view_mod)
new_day = ymd("2018-01-01")
new_data = data.frame(month = month(new_day, TRUE), wday = wday(new_day, TRUE, FALSE))
lines(x = despacito_df[["date"]], y = predict(view_mod), type = "l")
plot_vpd + lines(x = despacito_df[["date"]], y = predict(view_mod), type = "l")
plot_vpd() + lines(x = despacito_df[["date"]], y = predict(view_mod), type = "l")
plot_vpd() + lines(x = despacito_df[["date"]], y = predict(view_mod), type = "l", col = "red")
summary(view_mod)[["coefficients"]]
view_mod = lm( views ~ C(month,contr.treatment(7, base=2)) + wday, data=despacito_df )
view_mod = lm( views ~ C(month,contr.treatment(12, base=2)) + wday, data=despacito_df )
summary(view_mod)[["coefficients"]]
plot_vpd() + lines(x = despacito_df[["date"]], y = predict(view_mod), type = "l", col = "red")
view_mod = lm(views ~ month + wday, data = despacito_df)
summary(view_mod)[["coefficients"]]
view_mod = lm(views ~ factor(month, F) + wday, data = despacito_df)
view_mod = lm(views ~ factor(month, ordered = F) + wday, data = despacito_df)
summary(view_mod)[["coefficients"]]
view_mod = lm(views ~ factor(month, ordered = FALSE) + wday, data = despacito_df)
summary(view_mod)[["coefficients"]]
mean(despacito_df[which(despacito_df$wday == "Monday") && which(despacito_df$month == "Jan"), "views"])
view_mod = lm(views ~ factor(month, ordered = FALSE) + wday - 1, data = despacito_df)
summary(view_mod)[["coefficients"]]
view_mod = lm(views ~ factor(month, ordered = FALSE)-1 + wday-1, data = despacito_df)
summary(view_mod)[["coefficients"]]
mean(despacito_df[which(despacito_df$wday == "Monday") && which(despacito_df$month == "Jan"), "views"])
mean(despacito_df[which(despacito_df$month == "Jan"), "views"])
mean(despacito_df[which(despacito_df$wday == "Tuesday"), "views"])
mean(despacito_df[which(despacito_df$wday == "Tuesday"), "views"]) - mean(despacito_df[which(despacito_df$wday == "Monday"), "views"])
mean(despacito_df[which(despacito_df$wday == "Monday"), "views"])
mean(despacito_df[which(despacito_df$month == "Jan"), "views"]) - mean(despacito_df[which(despacito_df$wday == "Monday"), "views"])
view_mod = lm(views ~ factor(month, ordered = FALSE) + wday, data = despacito_df)
summary(view_mod)[["coefficients"]]
which(despacito_df$wday == "Monday") && which(despacito_df$month == "Jan")
which(despacito_df$wday == "Monday") || which(despacito_df$month == "Jan")
which(despacito_df$wday == "Monday")
intersect(which(despacito_df$wday == "Monday"), which(despacito_df$month == "Jan"))
intersect(which(despacito_df$wday == "Monday"), which(despacito_df$month == "Jan")) -> janmon
feb = which(despacito_df$month == "Jan")
feb
feb = which(despacito_df$month == "Feb")
mean(despacito_df[feb, "views"])
mean(despacito_df[feb, "views"]) - 385064.4
mean(despacito_df[jan, "views"])
mean(despacito_df[janmon, "views"])
jan = which(despacito_df$month == "Jan")
mean(despacito_df[jan, "views"])
mean(despacito_df[jan, "views"]) + 385064.4
plot_vpd() + lines(x = despacito_df[["date"]], y = predict(view_mod), type = "l", col = "red")
future_days = seq.Date(ymd("2018-01-13"), ymd("2020-01-01"))
future_days = seq.Date(ymd("2018-01-13"), ymd("2020-01-01"), by = "day")
head(future_days)
future_df = data.frame(month = month(future_days), wday = wday(future_days))
head(future_df)
future_df = data.frame(month = month(future_days, label = TRUE),
wday = wday(future_days, label = TRUE, abbr = FALSE))
heaD(future_df)
head(future_df)
future_views = predict(view_mod, newdata = future_df)
future_total = cumsum(future_views) + despacito_df[nrow(despacito_df), "views"] # Adding current total
head(cbind(future_days, future_total))
head(cbind(as.Date(future_days), future_total))
head(future_total)
head(future_days)
head(cbind(as.character(future_days), future_total)
head(cbind(as.character(future_days), future_total))
future_total
head(cbind(as.character(future_days), future_total))
cbind(as.character(future_days), future_total)
despacito_df[nrow(despacito_df), "views"]
future_total = cumsum(future_views) + despacito_df[nrow(despacito_df), "cumviews"] # Adding current total
cbind(as.character(future_days), future_total)
t_5b = future_days[which(future_total >= 5e9)]
t_5b = future_days[which(future_total >= 5e9)][1]
t_10b = future_days[which(future_total >= 1e10)][1]
future_milestones = c(t_5b = future_days[which(future_total >= 5e9)][1],
t_6b = future_days[which(future_total >= 6e9)][1],
t_7b = future_days[which(future_total >= 7e9)][1],
t_8b = future_days[which(future_total >= 8e9)][1],
t_9b = future_days[which(future_total >= 9e9)][1],
t_10b = future_days[which(future_total >= 1e10)][1])
print(future_milestones)
plot(future_days, future_total)
plot(future_days, future_total, type = "l")
plot(c(despacito_df$date, future_days), c(despacito_df$cumviews, future_total), type = "l")
print(future_milestones)
getwd()
setwd("~/maazinansari/content")
png("static/despacito/predict.png", width = 720)
plot_vpd() + lines(x = despacito_df[["date"]], y = predict(view_mod), type = "l", col = "red")
dev.off()
source('~/maazinansari/content/R/despacito/despacito_plotting.R')
getwd()
setwd(dir = "R/despacito/")
source('~/maazinansari/content/R/despacito/despacito_plotting.R')
plot_vpd()
mark_days(other_events, labels = names(other_events), type = "p", col = "purple")
dev.list()
plot_vpd()
# Views per day
plot_vpd = function() {
plot(views ~ date, data = despacito_df,
type = "l",
lwd = 3,
main = "Views per day",
ylim = c(0, 30e6),
xlim = xlim,
axes = FALSE)
axis(side = 1, at = xseq, labels = month(xseq, label = TRUE))
axis(side = 2, at = seq(0, 30e6, 5e6), labels = paste(seq(0, 30, 5), "M", sep = ""), las = 1)
}
plot_vpd()
plot_cvpd()
dev.next()
dev.off()
dev.cur()
plot_vpd()
mark_days(other_events, labels = names(other_events), type = "p", col = "purple")
mark_days(other_events, labels = names(other_events), type = "l", col = "purple")
plot_vpd()
mark_days(other_events, labels = seq_along(other_events), type = "l", col = "purple")
legend("topright", legend = paste(seq_along(other_events), " ", names(other_events)), bty = "n")
source('~/maazinansari/content/R/despacito/despacito_plotting.R')
setwd("../../")
setwd("R/despacito/")
source("despacito_plotting.R")
dev.cur()
plot_vpd()
dev.off()
plot_vpd()
plot(views ~ date, data = despacito_df,
type = "l",
lwd = 3,
main = "Views per day",
ylim = c(0, 30e6),
xlim = xlim,
axes = FALSE)
despacito_df
despacito_table
source("despacito_plotting.R")
library(knitr)
source("despacito.R")
read_chunk("despacito.R")
opts_chunk$set(fig.align = "center")
opts_knit$set(root.dir = "~/maazinansari/content/", base.url = "../../")
include_graphics("static/despacito/predict.png")
future_days = seq.Date(ymd("2018-01-13"), ymd("2020-01-01"), by = "day")
future_df = data.frame(month = month(future_days, label = TRUE),
wday = wday(future_days, label = TRUE, abbr = FALSE))
future_views = predict(view_mod, newdata = future_df)
future_total = cumsum(future_views) + despacito_df[nrow(despacito_df), "cumviews"] # Adding current total
future_milestones = c(t_5b = future_days[which(future_total >= 5e9)][1],
t_6b = future_days[which(future_total >= 6e9)][1],
t_7b = future_days[which(future_total >= 7e9)][1],
t_8b = future_days[which(future_total >= 8e9)][1],
t_9b = future_days[which(future_total >= 9e9)][1],
t_10b = future_days[which(future_total >= 1e10)][1])
print(future_milestones)
library(knitr)
source("despacito.R")
read_chunk("despacito.R")
opts_chunk$set(fig.align = "center")
opts_knit$set(root.dir = "~/maazinansari/content/", base.url = "../../")
future_views = predict(view_mod, newdata = future_df)
future_total = cumsum(future_views) + despacito_df[nrow(despacito_df), "cumviews"] # Adding current total
future_milestones = c(t_5b = future_days[which(future_total >= 5e9)][1],
t_6b = future_days[which(future_total >= 6e9)][1],
t_7b = future_days[which(future_total >= 7e9)][1],
t_8b = future_days[which(future_total >= 8e9)][1],
t_9b = future_days[which(future_total >= 9e9)][1],
t_10b = future_days[which(future_total >= 1e10)][1])
print(future_milestones)
nrow(despacito_df)
plot_change()
setwd("../..")
source("knitpages.R")
